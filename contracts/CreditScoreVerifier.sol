// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "./verifier.sol"; // Generated by EZKL

contract CreditScoreVerifier is Halo2Verifier {
    event ProofVerified(address indexed user, bytes32 publicInputHash, bool verified, string error);

    mapping(bytes32 => bool) public verificationResults;

    function verifyCreditScore(bytes calldata proof, uint256[] calldata publicInputs) external returns (bool) {
        bytes32 publicHash = keccak256(abi.encodePacked(publicInputs));

        try this.verifyProof(proof, publicInputs) {
          emit ProofVerified(msg.sender, publicHash, true, "");
          return true;
        } catch {
          emit ProofVerified(msg.sender, publicHash, false, "Proof threw error");
          return false; 
        }
    }
}
